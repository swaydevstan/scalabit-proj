name: Deploy App to k3s

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  BuildScanPush:
    runs-on: ubuntu-latest
    env:
       IMAGE_TAG: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/scalabit-repo/scalabit-api:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            workload_identity_provider: ${{ secrets.WIF_PROVIDER }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev

      - name: Build Docker Image
        run: |
            cd ${{ github.workspace }}/app
            docker build -t scalabit-api:${{ github.sha }} .

      - name: Scan Docker Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: scalabit-api:${{ github.sha }}
          format: 'table'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Push Image to Artifact Registry
        run: |
            docker tag scalabit-api:${{ github.sha }} $IMAGE_TAG
            docker push $IMAGE_TAG
  DeployApp:
    runs-on: ubuntu-latest
    needs: BuildScanPush

    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
            credentials_json: ${{ secrets.SA_USE }}
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
      - name: Copy Manifests to VM via IAP
        run: |
          gcloud compute ssh ${{ secrets.VM_NAME }} --zone ${{ vars.GCP_ZONE }} --tunnel-through-iap --command="mkdir -p ~/manifests"
          gcloud compute scp --zone ${{ vars.GCP_ZONE }} manifests/* ${{ secrets.VM_NAME }}:~/manifests/ --project ${{ secrets.GCP_PROJECT_ID }} --recurse --tunnel-through-iap

      - name: Deploy App
        env:
          VM_NAME: ${{ secrets.VM_NAME }}
          ZONE: ${{ vars.GCP_ZONE }}
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: ${{ vars.GCP_REGION }}
          IMAGE_TAG: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/scalabit-repo/scalabit-api:${{ github.sha }}
        run: |
            gcloud compute ssh "$VM_NAME" \
            --zone="$ZONE" \
            --tunnel-through-iap \
            --command="bash -c '
            sed -i "s|IMAGE_PLACEHOLDER|${IMAGE_TAG}|g" manifests/deployment.yaml &&
            kubectl apply -f manifests/namespace.yaml &&
            sleep 10 &&
            kubectl apply -f manifests/ &&
            kubectl rollout status deployment/scalabit-api -n scalabit timeout=60s
            '"